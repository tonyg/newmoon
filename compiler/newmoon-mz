#!/usr/local/bin/mzscheme -r
; -*- scheme -*-

(load "support/mzscheme.scm")
(load "main.scm")

(define (process-argument arg rest)
  (if (< (string-length arg) 2)
      (error "Command-line switches look like '-x' where is the switch identifier.")
      (case (string-ref arg 1)
	((#\d) (main$debug #t) rest)
	((#\D) (main$debug #f) rest)
	((#\i) (compiler$inline #t) rest)
	((#\I) (compiler$inline #f) rest)
	((#\p) (main$libpath (cons (car rest) (main$libpath))) (cdr rest))
	((#\b) (compiler$without-basic-libraries #t) rest)
	((#\B) (compiler$without-basic-libraries #f) rest)
	(else
	 (error "Unknown command-line switch" arg)))))

(let loop ((args (vector->list argv)))
  (if (not (null? args))
      (let ((arg (car args))
	    (rest (cdr args)))
	(case (string-ref arg 0)
	  ((#\-)
	   (loop (process-argument arg rest)))
	  (else
	   (compile-file arg)
	   (loop rest))))))
